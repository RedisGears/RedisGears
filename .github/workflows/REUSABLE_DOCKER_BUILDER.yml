on:
    workflow_call:
        inputs:
            os_version:
                required: true
                type: string
            dockerfile:
                required: true
                type: string
            arch:
                required: false
                type: string
                default: x86_64
            v8_version:
                default: 'default'
                required: false
                type: string
            v8_update_headers:
                default: 'no'
                required: false
                type: string
            redis_version:
                default: 7.2-rc1
                required: false
                type: string
        secrets:
            AWS_ACCESS_KEY_ID:
                required: false
            AWS_SECRET_ACCESS_KEY:
                required: false

env:
  CARGO_TERM_COLOR: always

jobs:

  build:
    runs-on: ubuntu-latest
    env:
      V8_VERSION: ${{ inputs.v8_version }}
      V8_UPDATE_HEADERS: ${{ inputs.v8_update_headers }}

    steps:
        - uses: actions/checkout@v3
        - name: install qemu
          if: ${{inputs.arch == 'arm64' }}
          uses: docker/setup-qemu-action@v2

        - name: install buildx
          uses: docker/setup-buildx-action@v2

        - name: build
          uses: docker/build-push-action@v4
          with:
            push: false
            context: .
            file: ${{inputs.dockerfile}}
            tags: gears/gears:ci
            build-args: |
                OS_VERSION: ${{inputs.os_version}}
                PLATFORM: ${{inputs.arch}}
                REDIS_VERSION: ${{inputs.redis_version}}
                v8_version: ${{inputs.v8_version}}
                v8_update_headers: ${{inputs.v8_update_headers}}

        - name: extract from image
          if: always()
          uses: shrink/actions-docker-extract@v2
          id: extract
          with:
              image: gears/gears:ci
              path: /build/target/release/.

        - name: publish extraction
          if: always()
          uses: actions/upload-artifact@v3
          with:
              name: ${{inputs.os_version}}
              path: ${{steps.extract.outputs.destination}}

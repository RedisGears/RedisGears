version: 2.1

commands:
  build-steps:
    parameters:
      platform:
        type: string
    steps: 
      - checkout
      - run:
          name: Submodule checkout
          command: git submodule update --init --recursive
      - run:
          name: System setup
          command: BREW_NO_UPDATE=1 python system-setup.py
      - run:
          name: Build
          command: |
            make get_deps
            make all OS_VERSION=<<parameters.platform>> SHOW=1
      - run:
          name: Test
          command: make test
      - store_test_results:
          path: pytest/logs

  platform-build-steps:
    parameters:
      platform:
        type: string
    steps:
      - run:
          name: Setup executor
          command: |
            apt-get -qq update
            apt-get -q install -y git openssh-client curl ca-certificates make tar gzip
            bash <(curl -fsSL https://get.docker.com)
      - checkout
      - setup_remote_docker
      - run:
          name: Setup
          command: |
            git submodule update --init --recursive
            ./deps/readies/bin/getpy2
      - run:
          name: Build for platform
          command: |
            cd build/platforms
            make <<parameters.platform>> VERBOSE=1
          no_output_timeout: 30m
      - persist_to_workspace:
          root: artifacts
          paths:
            - 'snapshot/*.zip'
            - 'snapshot/*.tgz'
            - 'release/*.zip'
            - 'release/*.tgz'

jobs:
  linux-debian:
    docker:
      - image: 'redislabsmodules/rmbuilder:latest'
    environment:
      - BUILD_DIR: build-debian
    steps:
      - run:
          name: Redis_5_upgrade
          command: cd ..; git clone https://github.com/antirez/redis.git; cd ./redis; git fetch; git checkout 5.0.7; make; make install
      - build-steps:
          platform: debian
  
  platform-build:
    parameters:
      platform:
        type: string
    docker:
      - image: 'debian:buster'
    steps:
      - platform-build-steps:
          platform: <<parameters.platform>>

  macos:
    macos:
      xcode: 11.1.0
    steps:
      - run:
          name: Fix macOS Python installation
          command: |
            brew update || true
            # brew reinstall -f python2
      - build-steps:
          platform: macosx

  build-multiarch-docker:
    machine:
      enabled: true
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run:
          name: Setup Docker client experimental features
          command: |
            sudo ./deps/readies/bin/getdocker --just-enable-exp
            docker version
      - run:
          name: Build
          command: |
            sudo docker login -u redisfab -p $DOCKER_REDISFAB_PWD
            make -C build/docker build
            sudo make -C build/docker publish

  deploy_snapshots:
    docker:
      - image: 'redislabsmodules/rmbuilder:latest'
    steps:
      - attach_workspace:
          at: artifacts
      - run:
          name: Deploy Snapshots to S3
          command: >-
            for f in artifacts/snapshot/*.zip artifacts/snapshot/*.tgz; do
              aws s3 cp $f s3://redismodules/redisgears/snapshots/ --acl public-read;
            done

  deploy_releases:
    docker:
      - image: 'redislabsmodules/rmbuilder:latest'
    steps:
      - attach_workspace:
          at: artifacts
      - run:
          name: Deploy Releases to S3
          command: >-
            for f in artifacts/release/*.zip artifacts/release/*.tgz; do
              aws s3 cp $f s3://redismodules/redisgears/ --acl public-read;
            done

  deploy_docs:
    docker:
      - image: 'redislabsmodules/rmbuilder:latest'
    steps:
      - checkout
      - run:
          name: Build Docs
          command: mkdocs build
      - run:
          name: Deploy Docs to S3
          command: |
            aws s3 cp site s3://oss.redislabs.com/redisgears/ --acl public-read --recursive


platform-builds-requires: &platform-builds-requires
  requires:
    - build-centos7
    - build-bionic
    - build-xenial

platform-builds-flow-defs: &platform-builds-flow-defs
  requires:
    - linux-debian
  filters:
    branches:
      only:
        - master


workflows:
  version: 2
  default_flow:
    jobs:
      - linux-debian:
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/
      - platform-build:
          name: build-centos7
          platform: centos7
          <<: *platform-builds-flow-defs
      - platform-build:
          name: build-bionic
          platform: bionic
          <<: *platform-builds-flow-defs
      - platform-build:
          name: build-xenial
          platform: xenial
          <<: *platform-builds-flow-defs
      - macos:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9].*/
#      - build-multiarch-docker:
#          filters:
#            branches:
#              ignore: /.*/
#            tags:
#              only: /^v[0-9].*/
      - deploy_snapshots:
          <<: *platform-builds-requires
          filters:
            branches:
              only:
                - master
      - deploy_releases:
          <<: *platform-builds-requires
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9].*/

      - deploy_docs:
          filters:
            branches:
              only: master

  nightly:
    triggers:
      - schedule:
          cron: "20 17 * * *"
          filters:
             branches:
               only:
                 - master
    jobs:
      - macos
